{"version":3,"sources":["index.js"],"names":["TwoButtons","props","title","useState","firstValue","setFirstValue","secondValue","setSecondValue","result","setResult","disableOperations","setDisableOperations","handleFirstValueChange","useCallback","event","currentFirstValue","value","fallbackValue","nextFirstValue","target","isNaN","handleSecondValueChange","handleAddChange","preventDefault","handleSubstractChange","handleResetChange","focusedElementRef","useRef","useEffect","nextDisableOperations","method","action","ref","name","onChange","placeholder","readOnly","type","disabled","onClick","ReactDOM","render","document","querySelector"],"mappings":"+RAcA,SAASA,EAAWC,GAAQ,IAClBC,EAAUD,EAAVC,MADiB,EAEWC,mBAAS,IAFpB,mBAElBC,EAFkB,KAENC,EAFM,OAGaF,mBAAS,IAHtB,mBAGlBG,EAHkB,KAGLC,EAHK,OAIGJ,mBAAS,IAJZ,mBAIlBK,EAJkB,KAIVC,EAJU,OAKyBN,oBAAS,GALlC,mBAKlBO,EALkB,KAKCC,EALD,KAOnBC,EAAyBC,uBAC7B,SAACC,GAECT,GAAc,SAACU,GACb,IArBYC,EAAOC,EAqBbC,EAAiBJ,EAAMK,OAAOH,MACpC,OAtBYA,EAsBME,EAtBCD,EAsBeF,EArBxCK,MAAMJ,GAASC,EAAgBD,OAwB7B,IAGIK,EAA0BR,uBAC9B,SAACC,GACCP,EAAeO,EAAMK,OAAOH,SAE9B,IAGIM,EAAkBT,uBACtB,SAACC,GACCA,EAAMS,iBACNd,GAAWL,IAAcE,KAE3B,CAACF,EAAYE,EAAaG,IAGtBe,EAAwBX,uBAC5B,SAACC,GACCA,EAAMS,iBACNd,GAAWL,GAAcE,KAE3B,CAACF,EAAYE,EAAaG,IAGtBgB,EAAoBZ,uBACxB,SAACC,GACCA,EAAMS,iBACNlB,EAAc,IACdE,EAAe,IACfE,EAAU,MAEZ,IAGIiB,EAAoBC,mBAmB1B,OAjBAC,qBAAU,cAEP,IAEHA,qBACE,WACE,IAAIC,GAAwB,GACxBT,MAAMhB,IAAegB,MAAMd,MAC7BuB,GAAwB,GAG1BnB,IAAsBmB,GACpBlB,EAAqBkB,KAEzB,CAACnB,EAAmBN,EAAYE,IAIhC,6BACE,2BAAIJ,GACJ,0BACE4B,OAAO,OACPC,OAAO,sDAEP,0CAEE,2BACEC,IAAKN,EACLO,KAAK,aACLjB,MAAOZ,EACP8B,SAAUtB,EACVuB,YAAY,OAGhB,2CAEE,2BACEF,KAAK,cACLjB,MAAOV,EACP4B,SAAUb,EACVc,YAAY,OAGhB,sCACU,2BAAOnB,MAAOR,EAAQ4B,UAAQ,EAACD,YAAY,OAErD,4BACEE,KAAK,SACLJ,KAAK,YACLjB,MAAM,MACNsB,SAAU5B,EACV6B,QAASjB,GALX,OASA,4BACEe,KAAK,SACLJ,KAAK,YACLjB,MAAM,MACNuB,QAASf,GAJX,aAQA,4BAAQe,QAASd,GAAjB,W,OAMRe,EAASC,OACP,kBAACzC,EAAD,CACEE,MACE,oFAGJwC,SAASC,cAAc,Y","file":"static/js/main.5ceaf92d.chunk.js","sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\nimport React, { useState, useCallback, useEffect, useRef } from \"react\"; // https://reactjs.org/docs/hooks-intro.html\nimport ReactDOM from \"react-dom\";\n\nconst numberOnly = (value, fallbackValue) =>\n  isNaN(value) ? fallbackValue : value;\n// function numberOnly(value, fallbackValue) {\n//   if (isNaN(value)) {\n//     return fallbackValue;\n//   } else {\n//     return value;\n//   }\n// }\n\nfunction TwoButtons(props) {\n  const { title } = props; // const title = props.title;\n  const [firstValue, setFirstValue] = useState(\"\"); // const stateAndSetter= useState(\"\"); const firstValue = stateAndSetter[0], setFirstValue= stateAndSetter[1];\n  const [secondValue, setSecondValue] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [disableOperations, setDisableOperations] = useState(true);\n\n  const handleFirstValueChange = useCallback(\n    (event) => {\n      // function (event){\n      setFirstValue((currentFirstValue) => {\n        const nextFirstValue = event.target.value;\n        return numberOnly(nextFirstValue, currentFirstValue);\n      });\n    },\n    [] // no need to include dependency setFirstValue: setters do not mutate\n  );\n\n  const handleSecondValueChange = useCallback(\n    (event) => {\n      setSecondValue(event.target.value);\n    },\n    [] // no need to include dependency setSecondValue: setters do not mutate\n  );\n\n  const handleAddChange = useCallback(\n    (event) => {\n      event.preventDefault(); // prevents form submit action\n      setResult(+firstValue + +secondValue); // setResult(parseFloat(firstValue) + parseFloat(secondValue))\n    },\n    [firstValue, secondValue, setResult]\n  );\n\n  const handleSubstractChange = useCallback(\n    (event) => {\n      event.preventDefault(); // prevents form submit action\n      setResult(+firstValue - +secondValue);\n    },\n    [firstValue, secondValue, setResult]\n  );\n\n  const handleResetChange = useCallback(\n    (event) => {\n      event.preventDefault(); // prevents form submit action\n      setFirstValue(\"\");\n      setSecondValue(\"\");\n      setResult(\"\");\n    },\n    [] // no need to include dependencies setFirstValue, setSecondValue, or setResult: setters do not mutate\n  );\n\n  const focusedElementRef = useRef();\n\n  useEffect(() => {\n    // focusedElementRef.current.focus();\n  }, []);\n\n  useEffect(\n    () => {\n      let nextDisableOperations = false;\n      if (isNaN(firstValue) || isNaN(secondValue)) {\n        nextDisableOperations = true;\n      }\n\n      disableOperations !== nextDisableOperations &&\n        setDisableOperations(nextDisableOperations);\n    },\n    [disableOperations, firstValue, secondValue] // need to include firstValue and secondValue: values do mutate\n  );\n\n  return (\n    <div>\n      <p>{title}</p>\n      <form\n        method=\"post\"\n        action=\"https://cs.gmu.edu:8443/offutt/servlet/formHandler\"\n      >\n        <p>\n          First Value:\n          <input\n            ref={focusedElementRef}\n            name=\"firstValue\"\n            value={firstValue}\n            onChange={handleFirstValueChange}\n            placeholder=\"0\"\n          />\n        </p>\n        <p>\n          Second Value:\n          <input\n            name=\"secondValue\"\n            value={secondValue}\n            onChange={handleSecondValueChange}\n            placeholder=\"0\"\n          />\n        </p>\n        <p>\n          Result: <input value={result} readOnly placeholder=\"0\" />\n        </p>\n        <button\n          type=\"submit\"\n          name=\"operation\"\n          value=\"add\"\n          disabled={disableOperations}\n          onClick={handleAddChange}\n        >\n          Add\n        </button>\n        <button\n          type=\"submit\"\n          name=\"operation\"\n          value=\"sub\"\n          onClick={handleSubstractChange}\n        >\n          Substract\n        </button>\n        <button onClick={handleResetChange}>Reset</button>\n      </form>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <TwoButtons\n    title={\n      \"A simple example that demonstrates how to operate with multiple submit buttons.\"\n    }\n  />,\n  document.querySelector(\"#root\")\n);\n\n// If you got here, please check the Material UI version of this example:\n// https://codesandbox.io/s/swe-432-react-two-buttons-example-mui-yohyi\n"],"sourceRoot":""}